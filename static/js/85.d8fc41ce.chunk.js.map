{"version":3,"file":"static/js/85.d8fc41ce.chunk.js","mappings":"kTAEaA,EAAgB,mCAAG,WAAMC,GAAN,uFACPC,EAAAA,GAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAAS,mCACTH,KAAK,GAAD,OAAKA,MANe,cACxBI,EADwB,yBAWvBA,EAASC,MAXc,2CAAH,sDAchBC,EAAc,mCAAG,WAAOC,EAAOP,GAAd,uFACLC,EAAAA,GAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNC,QAAS,mCACTK,MAAM,GAAD,OAAKD,GACVP,KAAK,GAAD,OAAKA,MAPa,cACtBI,EADsB,yBAWrBA,EAASC,MAXY,2CAAH,wDAcdI,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,GAAAA,IAAA,6CAAgDS,GAAM,CAC3ER,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfM,EAAY,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,GAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAAS,sCALW,cACpBC,EADoB,yBASnBA,EAASC,KAAKO,MATK,2CAAH,sDAYZC,EAAe,mCAAG,WAAMH,GAAN,uFACNT,EAAAA,GAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAAS,sCALc,cACvBC,EADuB,yBAStBA,EAASC,KAAKS,SATQ,2CAAH,qD,mLCjDfC,EAAaC,EAAAA,GAAAA,IAAH,+DAIVC,EAAOD,EAAAA,GAAAA,GAAH,2NAaJE,EAAOF,EAAAA,GAAAA,GAAH,2IAOJG,EAAUH,EAAAA,GAAAA,IAAH,yCAIPI,EAAQJ,EAAAA,GAAAA,GAAH,0C,SC0ClB,EAlEa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOI,EAAP,KAAeC,EAAf,KAoBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEjB,EAAAA,EAAAA,IAAaY,GAFf,QAEXM,EAFW,QAGRC,OAAS,IAChBR,EAAQO,GACRH,EAAU,aAEQ,IAAhBG,EAAKC,QACPJ,EAAU,YARK,gDAWjBA,EAAU,YAXO,yDAAH,qDAelBE,GACD,GAAE,CAACL,IAEW,aAAXE,GACK,SAAC,IAAD,KAGP,UAACV,EAAD,YACE,SAACK,EAAD,oBACA,SAACH,EAAD,UACGL,EAAKmB,KAAI,SAAAC,GAAE,OACV,UAACd,EAAD,YACE,0BACE,gBACEe,IACsB,OAApBD,EAAGE,aAAH,yCACsCF,EAAGE,cACrC,0EAENC,IAAI,mBACJC,OAAO,QACPC,MAAM,aAGV,UAAClB,EAAD,YACE,wBAAKa,EAAGM,iBACR,uBAAIN,EAAGO,iBAfAP,EAAGQ,QADJ,QAuBnB,C,oEC3DYC,EAAa,WACxB,OACE,iGAIH,C","sources":["api/moviApi.js","components/cast/cast.styled.jsx","components/cast/cast.jsx","components/rejected/rejected.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const TrendingApiMovie = async page => {\n  const responce = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        page: `${page}`,\n      },\n    }\n  );\n\n  return responce.data;\n};\n\nexport const searchApiMovie = async (value, page) => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        query: `${value}`,\n        page: `${page}`,\n      },\n    }\n  );\n  return responce.data;\n};\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: 'bef2e1469ade062164db331fc6ab2f25',\n    },\n  });\n  return responce.data;\n};\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n","import styled from 'styled-components';\n\nexport const ContentBox = styled.div`\n  max-width: 1280px;\n  margin: auto;\n`;\nexport const List = styled.ul`\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n\n  gap: 15px;\n  max-width: calc(100vw - 15px);\n  margin: 0 auto;\n  padding: 0;\n  display: flex;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  border: 1px solid #e3e3e3;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-top: 30px;\n  max-width: 100%;\n`;\nexport const Wrapper = styled.div`\n  padding: 5px;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n`;\n","import { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { getMovieCast } from 'api/moviApi';\nimport { RejectedId } from 'components/rejected/rejected';\nimport { ContentBox, List, Item, Wrapper, Title } from './cast.styled';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    const movieCastApi = async () => {\n      try {\n        const resp = await getMovieCast(movieId);\n        if (resp.length > 0) {\n          setCast(resp);\n          setStatus('resolved');\n        }\n        if (resp.length === 0) {\n          setStatus('rejected');\n        }\n      } catch (error) {\n        setStatus('rejected');\n      }\n    };\n\n    movieCastApi();\n  }, [movieId]);\n\n  if (status === 'rejected') {\n    return <RejectedId />;\n  }\n  return (\n    <ContentBox>\n      <Title>Cast</Title>\n      <List>\n        {cast.map(el => (\n          <Item key={el.cast_id}>\n            <div>\n              <img\n                src={\n                  el.profile_path !== null\n                    ? `https://image.tmdb.org/t/p/w500${el.profile_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n                }\n                alt=\"el.original_name\"\n                height=\"574px\"\n                width=\"382px\"\n              />\n            </div>\n            <Wrapper>\n              <h2>{el.original_name}</h2>\n              <p>{el.character}</p>\n            </Wrapper>\n          </Item>\n        ))}\n      </List>\n    </ContentBox>\n  );\n};\n\nCast.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      original_name: PropTypes.string,\n      profile_path: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ),\n};\n\nexport default Cast;\n","export const RejectedId = () => {\n  return (\n    <p>\n      Sorry we didn't find anything we have technical problems at the moment\n    </p>\n  );\n};\n"],"names":["TrendingApiMovie","page","axios","params","api_key","responce","data","searchApiMovie","value","query","getMovieDetails","id","getMovieCast","cast","getMovieReviews","results","ContentBox","styled","List","Item","Wrapper","Title","useState","setCast","movieId","useParams","status","setStatus","useEffect","movieCastApi","resp","length","map","el","src","profile_path","alt","height","width","original_name","character","cast_id","RejectedId"],"sourceRoot":""}