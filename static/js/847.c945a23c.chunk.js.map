{"version":3,"file":"static/js/847.c945a23c.chunk.js","mappings":"mTAEaA,EAAgB,mCAAG,WAAMC,GAAN,uFACPC,EAAAA,GAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAAS,mCACTH,KAAK,GAAD,OAAKA,MANe,cACxBI,EADwB,yBAWvBA,EAASC,MAXc,2CAAH,sDAchBC,EAAc,mCAAG,WAAOC,EAAOP,GAAd,uFACLC,EAAAA,GAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNC,QAAS,mCACTK,MAAM,GAAD,OAAKD,GACVP,KAAK,GAAD,OAAKA,MAPa,cACtBI,EADsB,yBAWrBA,EAASC,MAXY,2CAAH,wDAcdI,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,GAAAA,IAAA,6CAAgDS,GAAM,CAC3ER,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfM,EAAY,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,GAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAAS,sCALW,cACpBC,EADoB,yBASnBA,EAASC,KAAKO,MATK,2CAAH,sDAYZC,EAAe,mCAAG,WAAMH,GAAN,uFACNT,EAAAA,GAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAAS,sCALc,cACvBC,EADuB,yBAStBA,EAASC,KAAKS,SATQ,2CAAH,qD,oECnDfC,EAAa,WACxB,OACE,iGAIH,C,yHCkDD,UAlDgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDX,EAAAA,EAAAA,IAAgBQ,GAFf,QAEdI,EAFc,QAGXC,QAAU,IACjBR,EAAWO,GACXL,EAAU,aALQ,gDAQpBA,EAAU,YARU,yDAAH,qDAWrBI,GACD,GAAE,CAACH,IAEW,aAAXF,GAA4C,IAAnBF,EAAQS,QAC5B,SAAC,IAAD,KAIP,4BACE,qCACA,wBACGT,EAAQU,KAAI,YAA0C,IAAvCjB,EAAsC,EAAtCA,GAAIkB,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAA0B,EAAjBC,WACnC,OACE,2BACE,wBAAKF,IADP,KACoB,uBAAIC,MADfnB,EAIZ,QAIR,C","sources":["api/moviApi.js","components/rejected/rejected.jsx","components/reviews/reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const TrendingApiMovie = async page => {\n  const responce = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        page: `${page}`,\n      },\n    }\n  );\n\n  return responce.data;\n};\n\nexport const searchApiMovie = async (value, page) => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        query: `${value}`,\n        page: `${page}`,\n      },\n    }\n  );\n  return responce.data;\n};\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: 'bef2e1469ade062164db331fc6ab2f25',\n    },\n  });\n  return responce.data;\n};\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n","export const RejectedId = () => {\n  return (\n    <p>\n      Sorry we didn't find anything we have technical problems at the moment\n    </p>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'api/moviApi';\nimport { RejectedId } from 'components/rejected/rejected';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieReviewsApi = async () => {\n      try {\n        const resp = await getMovieReviews(movieId);\n        if (resp.length >= 1) {\n          setReviews(resp);\n          setStatus('resolved');\n        }\n      } catch (error) {\n        setStatus('rejected');\n      }\n    };\n    movieReviewsApi();\n  }, [movieId]);\n\n  if (status === 'rejected' || reviews.length === 0) {\n    return <RejectedId />;\n  }\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(({ id, author, content, updated_at }) => {\n          return (\n            <li key={id}>\n              <h2>{author}</h2> <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n"],"names":["TrendingApiMovie","page","axios","params","api_key","responce","data","searchApiMovie","value","query","getMovieDetails","id","getMovieCast","cast","getMovieReviews","results","RejectedId","useState","reviews","setReviews","status","setStatus","movieId","useParams","useEffect","movieReviewsApi","resp","length","map","author","content","updated_at"],"sourceRoot":""}