{"version":3,"file":"static/js/516.46590f5a.chunk.js","mappings":"mTAEaA,EAAgB,mCAAG,WAAMC,GAAN,uFACPC,EAAAA,GAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAAS,mCACTH,KAAK,GAAD,OAAKA,MANe,cACxBI,EADwB,yBAWvBA,EAASC,MAXc,2CAAH,sDAchBC,EAAc,mCAAG,WAAOC,EAAOP,GAAd,uFACLC,EAAAA,GAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNC,QAAS,mCACTK,MAAM,GAAD,OAAKD,GACVP,KAAK,GAAD,OAAKA,MAPa,cACtBI,EADsB,yBAWrBA,EAASC,MAXY,2CAAH,wDAcdI,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,GAAAA,IAAA,6CAAgDS,GAAM,CAC3ER,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfM,EAAY,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,GAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAAS,sCALW,cACpBC,EADoB,yBASnBA,EAASC,KAAKO,MATK,2CAAH,sDAYZC,EAAe,mCAAG,WAAMH,GAAN,uFACNT,EAAAA,GAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAAS,sCALc,cACvBC,EADuB,yBAStBA,EAASC,KAAKS,SATQ,2CAAH,qD,yHCS5B,UAvDa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOI,EAAP,KAAeC,EAAf,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEX,EAAAA,EAAAA,IAAaM,GAFf,OAEXM,EAFW,OAGjBP,EAAQO,GACRH,EAAU,YAJO,gDAMjBA,EAAU,YANO,yDAAH,qDAUlBE,GACD,GAAE,CAACL,IACW,aAAXE,GACD,KAGD,4BACE,kCACA,wBACGP,EAAKY,KAAI,SAAAC,GAAE,OACV,yBACE,4BACE,gBACEC,IACsB,OAApBD,EAAGE,aAAH,yCACsCF,EAAGE,cACrC,0EAENC,IAAI,MAEN,wBAAKH,EAAGI,oBAVHJ,EAAGK,QADF,QAkBnB,C,oEChDYC,EAAa,WACxB,OACE,iGAIH,C","sources":["api/moviApi.js","components/cast/cast.jsx","components/rejected/rejected.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const TrendingApiMovie = async page => {\n  const responce = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        page: `${page}`,\n      },\n    }\n  );\n\n  return responce.data;\n};\n\nexport const searchApiMovie = async (value, page) => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        query: `${value}`,\n        page: `${page}`,\n      },\n    }\n  );\n  return responce.data;\n};\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: 'bef2e1469ade062164db331fc6ab2f25',\n    },\n  });\n  return responce.data;\n};\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n","import { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { getMovieCast } from 'api/moviApi';\nimport { RejectedId } from 'components/rejected/rejected';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    const movieCastApi = async () => {\n      try {\n        const resp = await getMovieCast(movieId);\n        setCast(resp);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n      }\n    };\n\n    movieCastApi();\n  }, [movieId]);\n  if (status === 'rejected') {\n    <RejectedId />;\n  }\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(el => (\n          <li key={el.cast_id}>\n            <div>\n              <img\n                src={\n                  el.profile_path !== null\n                    ? `https://image.tmdb.org/t/p/w500${el.profile_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n                }\n                alt=\"\"\n              />\n              <h2>{el.original_name}</h2>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      original_name: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default Cast;\n","export const RejectedId = () => {\n  return (\n    <p>\n      Sorry we didn't find anything we have technical problems at the moment\n    </p>\n  );\n};\n"],"names":["TrendingApiMovie","page","axios","params","api_key","responce","data","searchApiMovie","value","query","getMovieDetails","id","getMovieCast","cast","getMovieReviews","results","useState","setCast","movieId","useParams","status","setStatus","useEffect","movieCastApi","resp","map","el","src","profile_path","alt","original_name","cast_id","RejectedId"],"sourceRoot":""}