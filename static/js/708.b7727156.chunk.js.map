{"version":3,"file":"static/js/708.b7727156.chunk.js","mappings":"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","sources":["api/moviApi.js","components/homeList/homeList.styled.jsx","components/homeList/homeItems.jsx","components/homeList/homeList.jsx","components/searchForm/form.styled.jsx","components/searchForm/formSearch.jsx","pages/movies/movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const TrendingApiMovie = async page => {\n  const responce = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        page: `${page}`,\n      },\n    }\n  );\n\n  return responce.data;\n};\n\nexport const searchApiMovie = async (value, page) => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n        query: `${value}`,\n        page: `${page}`,\n      },\n    }\n  );\n  return responce.data;\n};\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: 'bef2e1469ade062164db331fc6ab2f25',\n    },\n  });\n  return responce.data;\n};\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: 'bef2e1469ade062164db331fc6ab2f25',\n      },\n    }\n  );\n  return responce.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  flex-wrap: wrap;\n  gap: 31px;\n  padding-top: 60px;\n  padding-bottom: 60px;\n  justify-content: center;\n  display: flex;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  border: 1px solid #e3e3e3;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-top: 30px;\n  max-width: 100%;\n`;\nexport const ImgBox = styled.div`\n  position: relative;\n  max-width: 100%;\n`;\n\nexport const Img = styled.img`\n  height: 574px;\n`;\n\nexport const Average = styled.span`\n  position: absolute;\n  z-index: 99;\n  top: 5px;\n  left: 5px;\n  border: 2px solid;\n  border-radius: 50%;\n  padding: 8px;\n  background-color: rgb(63, 81, 181);\n  color: #f4f2ee;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 5px;\n  font-weight: 700;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ImgBox, Img, Item, Average, Title } from './homeList.styled';\n\nconst genresInfo = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\nexport const HomeItem = ({\n  date,\n  title,\n  img,\n  name,\n  id,\n  defaultImg,\n  average,\n  ganre,\n}) => {\n  const location = useLocation();\n\n  genresInfo.forEach(el => {\n    switch (el.id) {\n      case ganre[0]:\n        ganre[0] = el.name;\n        break;\n      case ganre[1]:\n        ganre[1] = el.name;\n        break;\n      case ganre[2]:\n        ganre[2] = el.name;\n        break;\n      case ganre[3]:\n        ganre[3] = el.name;\n        break;\n      case ganre[4]:\n        ganre[4] = el.name;\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  if (ganre.length > 3) {\n    return ganre.splice(0, 3);\n  }\n  const ss = String(ganre).replaceAll(',', ', ');\n  return (\n    <Item>\n      <ImgBox>\n        <Average>{average.toFixed(1)}</Average>\n        <picture>\n          <Link to={`/movies/${id} `} state={{ from: location }}>\n            <Img\n              src={\n                img !== null\n                  ? `https://image.tmdb.org/t/p/w500${img}`\n                  : defaultImg\n              }\n              alt=\"\"\n              height=\"574\"\n            />\n          </Link>\n        </picture>\n      </ImgBox>\n\n      <div>\n        <Title>{title ?? name}</Title>\n        <p>{date.slice(0, 4)}</p>\n        <p>{ss}</p>\n      </div>\n    </Item>\n  );\n};\n\nHomeItem.propTypes = {\n  img: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  defaultImg: PropTypes.string,\n  average: PropTypes.number,\n  date: PropTypes.string,\n  ganre: PropTypes.array,\n};\n","import { HomeItem } from './homeItems';\nimport PropTypes from 'prop-types';\nimport { ListStyled } from './homeList.styled';\nconst defaultImg =\n  'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png';\nexport const HomeList = ({ items }) => {\n  return (\n    <ListStyled>\n      {items.map(\n        ({\n          id,\n          release_date,\n          original_title,\n          poster_path,\n          name,\n          vote_average,\n          genre_ids,\n        }) => {\n          return (\n            <HomeItem\n              key={id}\n              title={original_title}\n              img={poster_path}\n              name={name}\n              id={id}\n              defaultImg={defaultImg}\n              average={vote_average}\n              date={release_date}\n              ganre={genre_ids}\n            />\n          );\n        }\n      )}\n    </ListStyled>\n  );\n};\n\nHomeList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string,\n      name: PropTypes.string,\n      vote_average: PropTypes.number,\n      release_date: PropTypes.string,\n      genre_ids: PropTypes.array,\n    })\n  ),\n};\n\n// adult: false;\n// backdrop_path: '/mqsPyyeDCBAghXyjbw4TfEYwljw.jpg';\n// genre_ids: (4)[(28, 18, 36, 10752)];\n// id: 49046;\n// media_type: 'movie';\n// original_language: 'de';\n// original_title: 'Im Westen nichts Neues';\n// overview: 'Paul Baumer and his friends Albert and Muller, egged on by romantic dreams of heroism, voluntarily enlist in the German army. Full of excitement and patriotic fervour, the boys enthusiastically march into a war they believe in. But once on the Western Front, they discover the soul-destroying horror of World War I.';\n// popularity: 314.415;\n// poster_path: '/2IRjbi9cADuDMKmHdLK7LaqQDKA.jpg';\n// release_date: '2022-10-07';\n// title: 'All Quiet on the Western Front';\n// video: false;\n// vote_average: 7.931;\n// vote_count: 289;\n// display: flex;\n// flex-wrap: wrap;\n// column-gap: 30px;\n// row-gap: 15px;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.space[2]}px;\n  width: 280px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 5px;\n  top: 8px;\n  background: transparent;\n  border: none;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n`;\n","import { Formik } from 'formik';\nimport { Input, FormStyled, Button, Label } from './form.styled';\nimport { FaSearch } from 'react-icons/fa';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const FormSearch = ({ onSubmitSearchValue, query }) => {\n  const initialValues = {\n    value: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { value } = values;\n    if (value.trim() === '') {\n      return toast.error('Type something', {\n        position: 'top-right',\n      });\n    }\n\n    onSubmitSearchValue(value);\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <FormStyled>\n        <Label htmlFor=\"\">\n          <Input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Enter the name of the movie\"\n            name=\"value\"\n          />\n          <Button type=\"submit\">\n            <FaSearch />\n          </Button>\n        </Label>\n        <Toaster />\n      </FormStyled>\n    </Formik>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FormSearch } from 'components/searchForm/formSearch';\nimport { searchApiMovie } from 'api/moviApi';\nimport { Pagination, Stack } from '@mui/material';\nimport { HomeList } from 'components/homeList/homeList';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [itemsData, setItemsData] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const [pageQty, setPageQty] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query', 1) ?? '';\n\n  useEffect(() => {\n    const respSearchMovie = async () => {\n      if (query === '') {\n        return;\n      }\n      try {\n        const resp = await searchApiMovie(query, page);\n\n        if (resp.results.length > 0) {\n          setItemsData(resp.results);\n          setPageQty(resp.total_pages);\n        } else {\n          toast.error(`Sorry, but nothing was found for your query ${query}`, {\n            position: 'top-right',\n          });\n          setSearchParams({});\n        }\n      } catch (error) {}\n    };\n    respSearchMovie();\n  }, [query, setSearchParams, pageQty, page]);\n\n  const onSubmit = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setPage(1);\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <FormSearch onSubmitSearchValue={onSubmit} />\n      <HomeList items={itemsData} />\n\n      <Stack spacing={2}>\n        {!!pageQty && (\n          <Pagination\n            count={pageQty}\n            page={page}\n            onChange={(_, num) => setPage(num)}\n            sx={{ marginY: 3, marginX: 'auto' }}\n            // renderItem={item => (\n            //   <PaginationItem\n            //     component={Link}\n            //     to={`${searchParams}&page=${item.page}`}\n            //     {...item}\n            //   />\n            // )}\n          />\n        )}\n      </Stack>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["TrendingApiMovie","page","axios","params","api_key","responce","data","searchApiMovie","value","query","getMovieDetails","id","getMovieCast","cast","getMovieReviews","results","ListStyled","styled","Item","ImgBox","Img","Average","Title","genresInfo","name","HomeItem","date","title","img","defaultImg","average","ganre","location","useLocation","forEach","el","length","splice","ss","String","replaceAll","toFixed","to","state","from","src","alt","height","slice","HomeList","items","map","release_date","original_title","poster_path","vote_average","genre_ids","FormStyled","Form","Input","Field","p","theme","space","Button","Label","FormSearch","onSubmitSearchValue","initialValues","onSubmit","values","resetForm","trim","toast","position","htmlFor","type","autoComplete","autoFocus","placeholder","useState","itemsData","setItemsData","setPage","pageQty","setPageQty","useSearchParams","searchParams","setSearchParams","get","useEffect","respSearchMovie","resp","total_pages","nextParams","Stack","spacing","Pagination","count","onChange","_","num","sx","marginY","marginX"],"sourceRoot":""}